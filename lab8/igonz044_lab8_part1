/* 
 * Name & Email: Itzel G. igonz044@ucr.edu
 * Lab Section: 026
 * Assignment: igonz044_lab8_part1.c
 * Created: 5/1/2019 10:35:32 AM
 * Author : ucrcse
 * Exercise Description: ADC using Potentiometer
 *
 * I acknowledge all content contained herein, excluding template or example
 * code, is my own original work.
 */ 

#include <avr/io.h>

void ADC_init(){
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
  // ADEN: setting this bit enables analog-to-digital conversion.
	// ADSC: setting this bit starts the first conversion.
	// ADATE: setting this bit enables auto-triggering. Since we are
	//        in Free Running Mode, a new conversion will trigger whenever
	//        the previous conversion completes.
}

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
	DDRB = 0xFF; PORTB = 0x00;
	DDRD = 0xFF; PORTD = 0x00;
  
	ADC_init();
  
	unsigned short my_short = 0;
	unsigned char my_char = (char)my_short;
  
   /* Replace with your application code */
   while (1) 
   {
		my_short = ADC;
		my_char = (char)my_short;
		PORTB = my_char;
    
		my_char = (char)(my_short >> 8);
		PORTD = my_char;
   }
}
