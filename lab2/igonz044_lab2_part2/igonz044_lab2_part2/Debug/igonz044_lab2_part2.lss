
igonz044_lab2_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000184  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ac  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007bf  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000310  00000000  00000000  000012e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  000015f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000404  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	72 c0       	rjmp	.+228    	; 0x180 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
unsigned char GetBit(unsigned char x, unsigned char k) {
    return ((x & (0x01 << k)) != 0);
}

int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	1f 92       	push	r1
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0x00; PORTA = 0xFF;
  a8:	81 e2       	ldi	r24, 0x21	; 33
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	fc 01       	movw	r30, r24
  ae:	10 82       	st	Z, r1
  b0:	82 e2       	ldi	r24, 0x22	; 34
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
	//DDRB = 0x00; PORTB = 0xFF;
	DDRC = 0xFF; PORTC = 0x00;
  ba:	87 e2       	ldi	r24, 0x27	; 39
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
  c4:	88 e2       	ldi	r24, 0x28	; 40
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	fc 01       	movw	r30, r24
  ca:	10 82       	st	Z, r1
	
	while(1)
	{
		unsigned char tmp = PINA;
  cc:	80 e2       	ldi	r24, 0x20	; 32
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	fc 01       	movw	r30, r24
  d2:	80 81       	ld	r24, Z
  d4:	89 83       	std	Y+1, r24	; 0x01

//if(tmp >= 1 && tmp <= 2)
		if(tmp == 0)//low fuel icon connected to PC6 is displayed
  d6:	89 81       	ldd	r24, Y+1	; 0x01
  d8:	88 23       	and	r24, r24
  da:	29 f4       	brne	.+10     	; 0xe6 <main+0x48>
		{
			PORTC = 0x40;
  dc:	88 e2       	ldi	r24, 0x28	; 40
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	20 e4       	ldi	r18, 0x40	; 64
  e2:	fc 01       	movw	r30, r24
  e4:	20 83       	st	Z, r18
		}
		if (tmp >= 1 && tmp <= 2)//low fuel, 1-2
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	88 23       	and	r24, r24
  ea:	49 f0       	breq	.+18     	; 0xfe <main+0x60>
  ec:	89 81       	ldd	r24, Y+1	; 0x01
  ee:	83 30       	cpi	r24, 0x03	; 3
  f0:	30 f4       	brcc	.+12     	; 0xfe <main+0x60>
		{
			PORTC = 0x60;
  f2:	88 e2       	ldi	r24, 0x28	; 40
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	20 e6       	ldi	r18, 0x60	; 96
  f8:	fc 01       	movw	r30, r24
  fa:	20 83       	st	Z, r18
  fc:	40 c0       	rjmp	.+128    	; 0x17e <main+0xe0>
		} 
		else if (tmp >= 3 && tmp <= 4)//3 to 4
  fe:	89 81       	ldd	r24, Y+1	; 0x01
 100:	83 30       	cpi	r24, 0x03	; 3
 102:	48 f0       	brcs	.+18     	; 0x116 <main+0x78>
 104:	89 81       	ldd	r24, Y+1	; 0x01
 106:	85 30       	cpi	r24, 0x05	; 5
 108:	30 f4       	brcc	.+12     	; 0x116 <main+0x78>
		{
			PORTC = 0x70; 
 10a:	88 e2       	ldi	r24, 0x28	; 40
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	20 e7       	ldi	r18, 0x70	; 112
 110:	fc 01       	movw	r30, r24
 112:	20 83       	st	Z, r18
 114:	34 c0       	rjmp	.+104    	; 0x17e <main+0xe0>
		} 
		else if (tmp >= 5 && tmp <= 6)//5 to 6
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	85 30       	cpi	r24, 0x05	; 5
 11a:	48 f0       	brcs	.+18     	; 0x12e <main+0x90>
 11c:	89 81       	ldd	r24, Y+1	; 0x01
 11e:	87 30       	cpi	r24, 0x07	; 7
 120:	30 f4       	brcc	.+12     	; 0x12e <main+0x90>
		{
			PORTC = 0x38; 
 122:	88 e2       	ldi	r24, 0x28	; 40
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	28 e3       	ldi	r18, 0x38	; 56
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18
 12c:	28 c0       	rjmp	.+80     	; 0x17e <main+0xe0>
		} 
		else if (tmp >= 7 && tmp <= 9)//7 to 9 
 12e:	89 81       	ldd	r24, Y+1	; 0x01
 130:	87 30       	cpi	r24, 0x07	; 7
 132:	48 f0       	brcs	.+18     	; 0x146 <main+0xa8>
 134:	89 81       	ldd	r24, Y+1	; 0x01
 136:	8a 30       	cpi	r24, 0x0A	; 10
 138:	30 f4       	brcc	.+12     	; 0x146 <main+0xa8>
		{
			PORTC = 0x3C;  
 13a:	88 e2       	ldi	r24, 0x28	; 40
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2c e3       	ldi	r18, 0x3C	; 60
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	1c c0       	rjmp	.+56     	; 0x17e <main+0xe0>
		} 
		else if (tmp >= 10 && tmp <= 12)//10 to 12 
 146:	89 81       	ldd	r24, Y+1	; 0x01
 148:	8a 30       	cpi	r24, 0x0A	; 10
 14a:	48 f0       	brcs	.+18     	; 0x15e <main+0xc0>
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 14e:	8d 30       	cpi	r24, 0x0D	; 13
 150:	30 f4       	brcc	.+12     	; 0x15e <main+0xc0>
		{
			PORTC = 0x3E; 
 152:	88 e2       	ldi	r24, 0x28	; 40
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	2e e3       	ldi	r18, 0x3E	; 62
 158:	fc 01       	movw	r30, r24
 15a:	20 83       	st	Z, r18
 15c:	10 c0       	rjmp	.+32     	; 0x17e <main+0xe0>
		} 
		else if (tmp >= 13 && tmp <= 15)//13 to 15 
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	8d 30       	cpi	r24, 0x0D	; 13
 162:	48 f0       	brcs	.+18     	; 0x176 <main+0xd8>
 164:	89 81       	ldd	r24, Y+1	; 0x01
 166:	80 31       	cpi	r24, 0x10	; 16
 168:	30 f4       	brcc	.+12     	; 0x176 <main+0xd8>
		{
			PORTC = 0x3F; 
 16a:	88 e2       	ldi	r24, 0x28	; 40
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	2f e3       	ldi	r18, 0x3F	; 63
 170:	fc 01       	movw	r30, r24
 172:	20 83       	st	Z, r18
 174:	04 c0       	rjmp	.+8      	; 0x17e <main+0xe0>
		} 
		else {
			PORTC = 0x00;
 176:	88 e2       	ldi	r24, 0x28	; 40
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	fc 01       	movw	r30, r24
 17c:	10 82       	st	Z, r1
		}
	//
	}
 17e:	a6 cf       	rjmp	.-180    	; 0xcc <main+0x2e>

00000180 <_exit>:
 180:	f8 94       	cli

00000182 <__stop_program>:
 182:	ff cf       	rjmp	.-2      	; 0x182 <__stop_program>
