
igonz044_lab11_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000055c  000005f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800104  00800104  000005f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000624  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f97  00000000  00000000  0000070c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a7  00000000  00000000  000016a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000816  00000000  00000000  0000204a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002860  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000588  00000000  00000000  000029e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005d3  00000000  00000000  00002f70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003543  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	8a c0       	rjmp	.+276    	; 0x116 <__ctors_end>
   2:	00 00       	nop
   4:	a5 c0       	rjmp	.+330    	; 0x150 <__bad_interrupt>
   6:	00 00       	nop
   8:	a3 c0       	rjmp	.+326    	; 0x150 <__bad_interrupt>
   a:	00 00       	nop
   c:	a1 c0       	rjmp	.+322    	; 0x150 <__bad_interrupt>
   e:	00 00       	nop
  10:	9f c0       	rjmp	.+318    	; 0x150 <__bad_interrupt>
  12:	00 00       	nop
  14:	9d c0       	rjmp	.+314    	; 0x150 <__bad_interrupt>
  16:	00 00       	nop
  18:	9b c0       	rjmp	.+310    	; 0x150 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	99 c0       	rjmp	.+306    	; 0x150 <__bad_interrupt>
  1e:	00 00       	nop
  20:	97 c0       	rjmp	.+302    	; 0x150 <__bad_interrupt>
  22:	00 00       	nop
  24:	95 c0       	rjmp	.+298    	; 0x150 <__bad_interrupt>
  26:	00 00       	nop
  28:	93 c0       	rjmp	.+294    	; 0x150 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	91 c0       	rjmp	.+290    	; 0x150 <__bad_interrupt>
  2e:	00 00       	nop
  30:	8f c0       	rjmp	.+286    	; 0x150 <__bad_interrupt>
  32:	00 00       	nop
  34:	c3 c0       	rjmp	.+390    	; 0x1bc <__vector_13>
  36:	00 00       	nop
  38:	8b c0       	rjmp	.+278    	; 0x150 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	89 c0       	rjmp	.+274    	; 0x150 <__bad_interrupt>
  3e:	00 00       	nop
  40:	87 c0       	rjmp	.+270    	; 0x150 <__bad_interrupt>
  42:	00 00       	nop
  44:	85 c0       	rjmp	.+266    	; 0x150 <__bad_interrupt>
  46:	00 00       	nop
  48:	83 c0       	rjmp	.+262    	; 0x150 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	81 c0       	rjmp	.+258    	; 0x150 <__bad_interrupt>
  4e:	00 00       	nop
  50:	7f c0       	rjmp	.+254    	; 0x150 <__bad_interrupt>
  52:	00 00       	nop
  54:	7d c0       	rjmp	.+250    	; 0x150 <__bad_interrupt>
  56:	00 00       	nop
  58:	7b c0       	rjmp	.+246    	; 0x150 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	79 c0       	rjmp	.+242    	; 0x150 <__bad_interrupt>
  5e:	00 00       	nop
  60:	77 c0       	rjmp	.+238    	; 0x150 <__bad_interrupt>
  62:	00 00       	nop
  64:	75 c0       	rjmp	.+234    	; 0x150 <__bad_interrupt>
  66:	00 00       	nop
  68:	73 c0       	rjmp	.+230    	; 0x150 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	71 c0       	rjmp	.+226    	; 0x150 <__bad_interrupt>
  6e:	00 00       	nop
  70:	6f c0       	rjmp	.+222    	; 0x150 <__bad_interrupt>
  72:	00 00       	nop
  74:	6d c0       	rjmp	.+218    	; 0x150 <__bad_interrupt>
  76:	00 00       	nop
  78:	6b c0       	rjmp	.+214    	; 0x150 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	69 c0       	rjmp	.+210    	; 0x150 <__bad_interrupt>
  7e:	00 00       	nop
  80:	67 c0       	rjmp	.+206    	; 0x150 <__bad_interrupt>
  82:	00 00       	nop
  84:	65 c0       	rjmp	.+202    	; 0x150 <__bad_interrupt>
  86:	00 00       	nop
  88:	63 c0       	rjmp	.+198    	; 0x150 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	48 02       	muls	r20, r24
  8e:	44 02       	muls	r20, r20
  90:	44 02       	muls	r20, r20
  92:	44 02       	muls	r20, r20
  94:	44 02       	muls	r20, r20
  96:	44 02       	muls	r20, r20
  98:	44 02       	muls	r20, r20
  9a:	44 02       	muls	r20, r20
  9c:	44 02       	muls	r20, r20
  9e:	44 02       	muls	r20, r20
  a0:	44 02       	muls	r20, r20
  a2:	44 02       	muls	r20, r20
  a4:	44 02       	muls	r20, r20
  a6:	44 02       	muls	r20, r20
  a8:	44 02       	muls	r20, r20
  aa:	44 02       	muls	r20, r20
  ac:	44 02       	muls	r20, r20
  ae:	44 02       	muls	r20, r20
  b0:	44 02       	muls	r20, r20
  b2:	44 02       	muls	r20, r20
  b4:	44 02       	muls	r20, r20
  b6:	44 02       	muls	r20, r20
  b8:	44 02       	muls	r20, r20
  ba:	44 02       	muls	r20, r20
  bc:	44 02       	muls	r20, r20
  be:	44 02       	muls	r20, r20
  c0:	44 02       	muls	r20, r20
  c2:	44 02       	muls	r20, r20
  c4:	44 02       	muls	r20, r20
  c6:	44 02       	muls	r20, r20
  c8:	44 02       	muls	r20, r20
  ca:	44 02       	muls	r20, r20
  cc:	44 02       	muls	r20, r20
  ce:	44 02       	muls	r20, r20
  d0:	44 02       	muls	r20, r20
  d2:	3b 02       	muls	r19, r27
  d4:	44 02       	muls	r20, r20
  d6:	44 02       	muls	r20, r20
  d8:	44 02       	muls	r20, r20
  da:	44 02       	muls	r20, r20
  dc:	44 02       	muls	r20, r20
  de:	44 02       	muls	r20, r20
  e0:	29 02       	muls	r18, r25
  e2:	44 02       	muls	r20, r20
  e4:	44 02       	muls	r20, r20
  e6:	44 02       	muls	r20, r20
  e8:	44 02       	muls	r20, r20
  ea:	44 02       	muls	r20, r20
  ec:	32 02       	muls	r19, r18
  ee:	b4 01       	movw	r22, r8
  f0:	bd 01       	movw	r22, r26
  f2:	c6 01       	movw	r24, r12
  f4:	cf 01       	movw	r24, r30
  f6:	d8 01       	movw	r26, r16
  f8:	e1 01       	movw	r28, r2
  fa:	ea 01       	movw	r28, r20
  fc:	f3 01       	movw	r30, r6
  fe:	fc 01       	movw	r30, r24
 100:	44 02       	muls	r20, r20
 102:	44 02       	muls	r20, r20
 104:	44 02       	muls	r20, r20
 106:	44 02       	muls	r20, r20
 108:	44 02       	muls	r20, r20
 10a:	44 02       	muls	r20, r20
 10c:	44 02       	muls	r20, r20
 10e:	05 02       	muls	r16, r21
 110:	0e 02       	muls	r16, r30
 112:	17 02       	muls	r17, r23
 114:	20 02       	muls	r18, r16

00000116 <__ctors_end>:
 116:	11 24       	eor	r1, r1
 118:	1f be       	out	0x3f, r1	; 63
 11a:	cf ef       	ldi	r28, 0xFF	; 255
 11c:	d0 e4       	ldi	r29, 0x40	; 64
 11e:	de bf       	out	0x3e, r29	; 62
 120:	cd bf       	out	0x3d, r28	; 61

00000122 <__do_copy_data>:
 122:	11 e0       	ldi	r17, 0x01	; 1
 124:	a0 e0       	ldi	r26, 0x00	; 0
 126:	b1 e0       	ldi	r27, 0x01	; 1
 128:	ec e5       	ldi	r30, 0x5C	; 92
 12a:	f5 e0       	ldi	r31, 0x05	; 5
 12c:	00 e0       	ldi	r16, 0x00	; 0
 12e:	0b bf       	out	0x3b, r16	; 59
 130:	02 c0       	rjmp	.+4      	; 0x136 <__do_copy_data+0x14>
 132:	07 90       	elpm	r0, Z+
 134:	0d 92       	st	X+, r0
 136:	a4 30       	cpi	r26, 0x04	; 4
 138:	b1 07       	cpc	r27, r17
 13a:	d9 f7       	brne	.-10     	; 0x132 <__do_copy_data+0x10>

0000013c <__do_clear_bss>:
 13c:	21 e0       	ldi	r18, 0x01	; 1
 13e:	a4 e0       	ldi	r26, 0x04	; 4
 140:	b1 e0       	ldi	r27, 0x01	; 1
 142:	01 c0       	rjmp	.+2      	; 0x146 <.do_clear_bss_start>

00000144 <.do_clear_bss_loop>:
 144:	1d 92       	st	X+, r1

00000146 <.do_clear_bss_start>:
 146:	a5 31       	cpi	r26, 0x15	; 21
 148:	b2 07       	cpc	r27, r18
 14a:	e1 f7       	brne	.-8      	; 0x144 <.do_clear_bss_loop>
 14c:	aa d1       	rcall	.+852    	; 0x4a2 <main>
 14e:	04 c2       	rjmp	.+1032   	; 0x558 <_exit>

00000150 <__bad_interrupt>:
 150:	57 cf       	rjmp	.-338    	; 0x0 <__vectors>

00000152 <TimerSet>:
		if( c == 0 ) { return b; }
		a = b;
		b = c;
	}
	return 0;
}
 152:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 156:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 15a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 15e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 162:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <_avr_timer_cntcurr>
 166:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <_avr_timer_cntcurr+0x1>
 16a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_avr_timer_cntcurr+0x2>
 16e:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_avr_timer_cntcurr+0x3>
 172:	08 95       	ret

00000174 <TimerOn>:
 174:	8b e0       	ldi	r24, 0x0B	; 11
 176:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 17a:	8d e7       	ldi	r24, 0x7D	; 125
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 182:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 186:	82 e0       	ldi	r24, 0x02	; 2
 188:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 18c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 190:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 194:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 198:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 19c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1a0:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1a4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_avr_timer_cntcurr>
 1a8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_avr_timer_cntcurr+0x1>
 1ac:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <_avr_timer_cntcurr+0x2>
 1b0:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <_avr_timer_cntcurr+0x3>
 1b4:	8f b7       	in	r24, 0x3f	; 63
 1b6:	80 68       	ori	r24, 0x80	; 128
 1b8:	8f bf       	out	0x3f, r24	; 63
 1ba:	08 95       	ret

000001bc <__vector_13>:
 1bc:	1f 92       	push	r1
 1be:	0f 92       	push	r0
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	0f 92       	push	r0
 1c4:	11 24       	eor	r1, r1
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_avr_timer_cntcurr>
 1d2:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_avr_timer_cntcurr+0x1>
 1d6:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <_avr_timer_cntcurr+0x2>
 1da:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <_avr_timer_cntcurr+0x3>
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	a1 09       	sbc	r26, r1
 1e2:	b1 09       	sbc	r27, r1
 1e4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_avr_timer_cntcurr>
 1e8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_avr_timer_cntcurr+0x1>
 1ec:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <_avr_timer_cntcurr+0x2>
 1f0:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <_avr_timer_cntcurr+0x3>
 1f4:	89 2b       	or	r24, r25
 1f6:	8a 2b       	or	r24, r26
 1f8:	8b 2b       	or	r24, r27
 1fa:	99 f4       	brne	.+38     	; 0x222 <__vector_13+0x66>
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <TimerFlag>
 202:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 206:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 20a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 20e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 212:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_avr_timer_cntcurr>
 216:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_avr_timer_cntcurr+0x1>
 21a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <_avr_timer_cntcurr+0x2>
 21e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <_avr_timer_cntcurr+0x3>
 222:	bf 91       	pop	r27
 224:	af 91       	pop	r26
 226:	9f 91       	pop	r25
 228:	8f 91       	pop	r24
 22a:	0f 90       	pop	r0
 22c:	0f be       	out	0x3f, r0	; 63
 22e:	0f 90       	pop	r0
 230:	1f 90       	pop	r1
 232:	18 95       	reti

00000234 <delay_ms>:
 234:	18 16       	cp	r1, r24
 236:	19 06       	cpc	r1, r25
 238:	5c f0       	brlt	.+22     	; 0x250 <delay_ms+0x1c>
 23a:	08 95       	ret
 23c:	00 00       	nop
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	31 09       	sbc	r19, r1
 242:	e1 f7       	brne	.-8      	; 0x23c <delay_ms+0x8>
 244:	4f 5f       	subi	r20, 0xFF	; 255
 246:	5f 4f       	sbci	r21, 0xFF	; 255
 248:	84 17       	cp	r24, r20
 24a:	95 07       	cpc	r25, r21
 24c:	19 f4       	brne	.+6      	; 0x254 <delay_ms+0x20>
 24e:	08 95       	ret
 250:	40 e0       	ldi	r20, 0x00	; 0
 252:	50 e0       	ldi	r21, 0x00	; 0
 254:	27 e0       	ldi	r18, 0x07	; 7
 256:	33 e0       	ldi	r19, 0x03	; 3
 258:	f1 cf       	rjmp	.-30     	; 0x23c <delay_ms+0x8>

0000025a <LCD_WriteCommand>:
 25a:	10 98       	cbi	0x02, 0	; 2
 25c:	8b b9       	out	0x0b, r24	; 11
 25e:	11 9a       	sbi	0x02, 1	; 2
 260:	00 00       	nop
 262:	11 98       	cbi	0x02, 1	; 2
 264:	82 e0       	ldi	r24, 0x02	; 2
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	e5 cf       	rjmp	.-54     	; 0x234 <delay_ms>
 26a:	08 95       	ret

0000026c <LCD_Cursor>:
 26c:	81 31       	cpi	r24, 0x11	; 17
 26e:	18 f4       	brcc	.+6      	; 0x276 <LCD_Cursor+0xa>
 270:	81 58       	subi	r24, 0x81	; 129
 272:	f3 cf       	rjmp	.-26     	; 0x25a <LCD_WriteCommand>
 274:	08 95       	ret
 276:	81 55       	subi	r24, 0x51	; 81
 278:	f0 cf       	rjmp	.-32     	; 0x25a <LCD_WriteCommand>
 27a:	08 95       	ret

0000027c <LCD_init>:
 27c:	84 e6       	ldi	r24, 0x64	; 100
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	d9 df       	rcall	.-78     	; 0x234 <delay_ms>
 282:	88 e3       	ldi	r24, 0x38	; 56
 284:	ea df       	rcall	.-44     	; 0x25a <LCD_WriteCommand>
 286:	86 e0       	ldi	r24, 0x06	; 6
 288:	e8 df       	rcall	.-48     	; 0x25a <LCD_WriteCommand>
 28a:	8f e0       	ldi	r24, 0x0F	; 15
 28c:	e6 df       	rcall	.-52     	; 0x25a <LCD_WriteCommand>
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	e4 df       	rcall	.-56     	; 0x25a <LCD_WriteCommand>
 292:	8a e0       	ldi	r24, 0x0A	; 10
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	ce cf       	rjmp	.-100    	; 0x234 <delay_ms>
 298:	08 95       	ret

0000029a <LCD_WriteData>:
 29a:	10 9a       	sbi	0x02, 0	; 2
 29c:	8b b9       	out	0x0b, r24	; 11
 29e:	11 9a       	sbi	0x02, 1	; 2
 2a0:	00 00       	nop
 2a2:	11 98       	cbi	0x02, 1	; 2
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	c5 cf       	rjmp	.-118    	; 0x234 <delay_ms>
 2aa:	08 95       	ret

000002ac <GetKeypadKey>:
 2ac:	8f ee       	ldi	r24, 0xEF	; 239
 2ae:	88 b9       	out	0x08, r24	; 8
 2b0:	00 00       	nop
 2b2:	30 9b       	sbis	0x06, 0	; 6
 2b4:	29 c0       	rjmp	.+82     	; 0x308 <GetKeypadKey+0x5c>
 2b6:	31 9b       	sbis	0x06, 1	; 6
 2b8:	29 c0       	rjmp	.+82     	; 0x30c <GetKeypadKey+0x60>
 2ba:	32 9b       	sbis	0x06, 2	; 6
 2bc:	29 c0       	rjmp	.+82     	; 0x310 <GetKeypadKey+0x64>
 2be:	33 9b       	sbis	0x06, 3	; 6
 2c0:	29 c0       	rjmp	.+82     	; 0x314 <GetKeypadKey+0x68>
 2c2:	8f ed       	ldi	r24, 0xDF	; 223
 2c4:	88 b9       	out	0x08, r24	; 8
 2c6:	00 00       	nop
 2c8:	30 9b       	sbis	0x06, 0	; 6
 2ca:	26 c0       	rjmp	.+76     	; 0x318 <GetKeypadKey+0x6c>
 2cc:	31 9b       	sbis	0x06, 1	; 6
 2ce:	26 c0       	rjmp	.+76     	; 0x31c <GetKeypadKey+0x70>
 2d0:	32 9b       	sbis	0x06, 2	; 6
 2d2:	26 c0       	rjmp	.+76     	; 0x320 <GetKeypadKey+0x74>
 2d4:	33 9b       	sbis	0x06, 3	; 6
 2d6:	26 c0       	rjmp	.+76     	; 0x324 <GetKeypadKey+0x78>
 2d8:	8f eb       	ldi	r24, 0xBF	; 191
 2da:	88 b9       	out	0x08, r24	; 8
 2dc:	00 00       	nop
 2de:	30 9b       	sbis	0x06, 0	; 6
 2e0:	23 c0       	rjmp	.+70     	; 0x328 <GetKeypadKey+0x7c>
 2e2:	31 9b       	sbis	0x06, 1	; 6
 2e4:	23 c0       	rjmp	.+70     	; 0x32c <GetKeypadKey+0x80>
 2e6:	32 9b       	sbis	0x06, 2	; 6
 2e8:	23 c0       	rjmp	.+70     	; 0x330 <GetKeypadKey+0x84>
 2ea:	33 9b       	sbis	0x06, 3	; 6
 2ec:	23 c0       	rjmp	.+70     	; 0x334 <GetKeypadKey+0x88>
 2ee:	8f e7       	ldi	r24, 0x7F	; 127
 2f0:	88 b9       	out	0x08, r24	; 8
 2f2:	00 00       	nop
 2f4:	30 9b       	sbis	0x06, 0	; 6
 2f6:	20 c0       	rjmp	.+64     	; 0x338 <GetKeypadKey+0x8c>
 2f8:	31 9b       	sbis	0x06, 1	; 6
 2fa:	20 c0       	rjmp	.+64     	; 0x33c <GetKeypadKey+0x90>
 2fc:	32 9b       	sbis	0x06, 2	; 6
 2fe:	20 c0       	rjmp	.+64     	; 0x340 <GetKeypadKey+0x94>
 300:	33 9b       	sbis	0x06, 3	; 6
 302:	20 c0       	rjmp	.+64     	; 0x344 <GetKeypadKey+0x98>
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	08 95       	ret
 308:	81 e3       	ldi	r24, 0x31	; 49
 30a:	08 95       	ret
 30c:	84 e3       	ldi	r24, 0x34	; 52
 30e:	08 95       	ret
 310:	87 e3       	ldi	r24, 0x37	; 55
 312:	08 95       	ret
 314:	8a e2       	ldi	r24, 0x2A	; 42
 316:	08 95       	ret
 318:	82 e3       	ldi	r24, 0x32	; 50
 31a:	08 95       	ret
 31c:	85 e3       	ldi	r24, 0x35	; 53
 31e:	08 95       	ret
 320:	88 e3       	ldi	r24, 0x38	; 56
 322:	08 95       	ret
 324:	80 e3       	ldi	r24, 0x30	; 48
 326:	08 95       	ret
 328:	83 e3       	ldi	r24, 0x33	; 51
 32a:	08 95       	ret
 32c:	86 e3       	ldi	r24, 0x36	; 54
 32e:	08 95       	ret
 330:	89 e3       	ldi	r24, 0x39	; 57
 332:	08 95       	ret
 334:	83 e2       	ldi	r24, 0x23	; 35
 336:	08 95       	ret
 338:	81 e4       	ldi	r24, 0x41	; 65
 33a:	08 95       	ret
 33c:	82 e4       	ldi	r24, 0x42	; 66
 33e:	08 95       	ret
 340:	83 e4       	ldi	r24, 0x43	; 67
 342:	08 95       	ret
 344:	84 e4       	ldi	r24, 0x44	; 68
 346:	08 95       	ret

00000348 <KeyPad_LCD_SM>:
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	ec 01       	movw	r28, r24
 34e:	ae df       	rcall	.-164    	; 0x2ac <GetKeypadKey>
 350:	20 97       	sbiw	r28, 0x00	; 0
 352:	09 f0       	breq	.+2      	; 0x356 <KeyPad_LCD_SM+0xe>
 354:	a2 c0       	rjmp	.+324    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	85 34       	cpi	r24, 0x45	; 69
 35a:	91 05       	cpc	r25, r1
 35c:	08 f0       	brcs	.+2      	; 0x360 <KeyPad_LCD_SM+0x18>
 35e:	94 c0       	rjmp	.+296    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 360:	fc 01       	movw	r30, r24
 362:	ea 5b       	subi	r30, 0xBA	; 186
 364:	ff 4f       	sbci	r31, 0xFF	; 255
 366:	ef c0       	rjmp	.+478    	; 0x546 <__tablejump2__>
 368:	81 e3       	ldi	r24, 0x31	; 49
 36a:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	7d df       	rcall	.-262    	; 0x26c <LCD_Cursor>
 372:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 376:	91 df       	rcall	.-222    	; 0x29a <LCD_WriteData>
 378:	8b c0       	rjmp	.+278    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 37a:	82 e3       	ldi	r24, 0x32	; 50
 37c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	74 df       	rcall	.-280    	; 0x26c <LCD_Cursor>
 384:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 388:	88 df       	rcall	.-240    	; 0x29a <LCD_WriteData>
 38a:	82 c0       	rjmp	.+260    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 38c:	83 e3       	ldi	r24, 0x33	; 51
 38e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	6b df       	rcall	.-298    	; 0x26c <LCD_Cursor>
 396:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 39a:	7f df       	rcall	.-258    	; 0x29a <LCD_WriteData>
 39c:	79 c0       	rjmp	.+242    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 39e:	84 e3       	ldi	r24, 0x34	; 52
 3a0:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	62 df       	rcall	.-316    	; 0x26c <LCD_Cursor>
 3a8:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 3ac:	76 df       	rcall	.-276    	; 0x29a <LCD_WriteData>
 3ae:	70 c0       	rjmp	.+224    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 3b0:	85 e3       	ldi	r24, 0x35	; 53
 3b2:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	59 df       	rcall	.-334    	; 0x26c <LCD_Cursor>
 3ba:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 3be:	6d df       	rcall	.-294    	; 0x29a <LCD_WriteData>
 3c0:	67 c0       	rjmp	.+206    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 3c2:	86 e3       	ldi	r24, 0x36	; 54
 3c4:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	50 df       	rcall	.-352    	; 0x26c <LCD_Cursor>
 3cc:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 3d0:	64 df       	rcall	.-312    	; 0x29a <LCD_WriteData>
 3d2:	5e c0       	rjmp	.+188    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 3d4:	87 e3       	ldi	r24, 0x37	; 55
 3d6:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	47 df       	rcall	.-370    	; 0x26c <LCD_Cursor>
 3de:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 3e2:	5b df       	rcall	.-330    	; 0x29a <LCD_WriteData>
 3e4:	55 c0       	rjmp	.+170    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 3e6:	88 e3       	ldi	r24, 0x38	; 56
 3e8:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	3e df       	rcall	.-388    	; 0x26c <LCD_Cursor>
 3f0:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 3f4:	52 df       	rcall	.-348    	; 0x29a <LCD_WriteData>
 3f6:	4c c0       	rjmp	.+152    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 3f8:	89 e3       	ldi	r24, 0x39	; 57
 3fa:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	35 df       	rcall	.-406    	; 0x26c <LCD_Cursor>
 402:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 406:	49 df       	rcall	.-366    	; 0x29a <LCD_WriteData>
 408:	43 c0       	rjmp	.+134    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 40a:	81 e4       	ldi	r24, 0x41	; 65
 40c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	2c df       	rcall	.-424    	; 0x26c <LCD_Cursor>
 414:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 418:	40 df       	rcall	.-384    	; 0x29a <LCD_WriteData>
 41a:	3a c0       	rjmp	.+116    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 41c:	82 e4       	ldi	r24, 0x42	; 66
 41e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	23 df       	rcall	.-442    	; 0x26c <LCD_Cursor>
 426:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 42a:	37 df       	rcall	.-402    	; 0x29a <LCD_WriteData>
 42c:	31 c0       	rjmp	.+98     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 42e:	83 e4       	ldi	r24, 0x43	; 67
 430:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	1a df       	rcall	.-460    	; 0x26c <LCD_Cursor>
 438:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 43c:	2e df       	rcall	.-420    	; 0x29a <LCD_WriteData>
 43e:	28 c0       	rjmp	.+80     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 440:	84 e4       	ldi	r24, 0x44	; 68
 442:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	11 df       	rcall	.-478    	; 0x26c <LCD_Cursor>
 44a:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 44e:	25 df       	rcall	.-438    	; 0x29a <LCD_WriteData>
 450:	1f c0       	rjmp	.+62     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 452:	8a e2       	ldi	r24, 0x2A	; 42
 454:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	08 df       	rcall	.-496    	; 0x26c <LCD_Cursor>
 45c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 460:	1c df       	rcall	.-456    	; 0x29a <LCD_WriteData>
 462:	16 c0       	rjmp	.+44     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 464:	80 e3       	ldi	r24, 0x30	; 48
 466:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	ff de       	rcall	.-514    	; 0x26c <LCD_Cursor>
 46e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 472:	13 df       	rcall	.-474    	; 0x29a <LCD_WriteData>
 474:	0d c0       	rjmp	.+26     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 476:	83 e2       	ldi	r24, 0x23	; 35
 478:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	f6 de       	rcall	.-532    	; 0x26c <LCD_Cursor>
 480:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 484:	0a df       	rcall	.-492    	; 0x29a <LCD_WriteData>
 486:	04 c0       	rjmp	.+8      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 488:	8b e1       	ldi	r24, 0x1B	; 27
 48a:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tempB>
 48e:	05 c0       	rjmp	.+10     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 490:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <tempB>
 494:	8b 31       	cpi	r24, 0x1B	; 27
 496:	09 f0       	breq	.+2      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 498:	85 b9       	out	0x05, r24	; 5
 49a:	ce 01       	movw	r24, r28
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	08 95       	ret

000004a2 <main>:
//Initializing our state machine/function
int KeyPad_LCD_SM(int k);

int main()
{
	DDRA = 0xFF; PORTA = 0x00;//BUTTONS! input
 4a2:	8f ef       	ldi	r24, 0xFF	; 255
 4a4:	81 b9       	out	0x01, r24	; 1
 4a6:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00;//OUTPUT for the 5 LEDs (B0-B4)
 4a8:	84 b9       	out	0x04, r24	; 4
 4aa:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F;//KEYPAD input 
 4ac:	90 ef       	ldi	r25, 0xF0	; 240
 4ae:	97 b9       	out	0x07, r25	; 7
 4b0:	9f e0       	ldi	r25, 0x0F	; 15
 4b2:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00;//LCD output
 4b4:	8a b9       	out	0x0a, r24	; 10
 4b6:	1b b8       	out	0x0b, r1	; 11
	static task task1;
	task *tasks[] = { &task1};
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	
	//There was only one state machine so we set the size of the array to 1
	task1.state = 0;
 4b8:	e4 e0       	ldi	r30, 0x04	; 4
 4ba:	f1 e0       	ldi	r31, 0x01	; 1
 4bc:	10 82       	st	Z, r1
	task1.period = SMperiod;
 4be:	85 e0       	ldi	r24, 0x05	; 5
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	a0 e0       	ldi	r26, 0x00	; 0
 4c4:	b0 e0       	ldi	r27, 0x00	; 0
 4c6:	81 83       	std	Z+1, r24	; 0x01
 4c8:	92 83       	std	Z+2, r25	; 0x02
 4ca:	a3 83       	std	Z+3, r26	; 0x03
 4cc:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = SMperiod;
 4ce:	85 83       	std	Z+5, r24	; 0x05
 4d0:	96 83       	std	Z+6, r25	; 0x06
 4d2:	a7 83       	std	Z+7, r26	; 0x07
 4d4:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &KeyPad_LCD_SM;
 4d6:	84 ea       	ldi	r24, 0xA4	; 164
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	92 87       	std	Z+10, r25	; 0x0a
 4dc:	81 87       	std	Z+9, r24	; 0x09

	TimerSet(SMperiod);
 4de:	65 e0       	ldi	r22, 0x05	; 5
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	35 de       	rcall	.-918    	; 0x152 <TimerSet>
	TimerOn();
 4e8:	45 de       	rcall	.-886    	; 0x174 <TimerOn>
	unsigned char i;
	LCD_init();
 4ea:	c8 de       	rcall	.-624    	; 0x27c <LCD_init>
 4ec:	c4 e0       	ldi	r28, 0x04	; 4
	
	while(1) {
		// Scheduler code for the SM
		for (i = 0; i < numTasks; i++) {
			if (tasks[i]->elapsedTime >= tasks[i]->period ) {
 4ee:	d1 e0       	ldi	r29, 0x01	; 1
 4f0:	4d 81       	ldd	r20, Y+5	; 0x05
 4f2:	5e 81       	ldd	r21, Y+6	; 0x06
 4f4:	6f 81       	ldd	r22, Y+7	; 0x07
 4f6:	78 85       	ldd	r23, Y+8	; 0x08
 4f8:	89 81       	ldd	r24, Y+1	; 0x01
 4fa:	9a 81       	ldd	r25, Y+2	; 0x02
 4fc:	ab 81       	ldd	r26, Y+3	; 0x03
 4fe:	bc 81       	ldd	r27, Y+4	; 0x04
 500:	48 17       	cp	r20, r24
 502:	59 07       	cpc	r21, r25
 504:	6a 07       	cpc	r22, r26
 506:	7b 07       	cpc	r23, r27
 508:	60 f0       	brcs	.+24     	; 0x522 <main+0x80>
 50a:	88 81       	ld	r24, Y
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 50c:	e9 85       	ldd	r30, Y+9	; 0x09
 50e:	fa 85       	ldd	r31, Y+10	; 0x0a
 510:	08 2e       	mov	r0, r24
 512:	00 0c       	add	r0, r0
 514:	99 0b       	sbc	r25, r25
 516:	09 95       	icall
 518:	88 83       	st	Y, r24
 51a:	1d 82       	std	Y+5, r1	; 0x05
				tasks[i]->elapsedTime = 0;
 51c:	1e 82       	std	Y+6, r1	; 0x06
 51e:	1f 82       	std	Y+7, r1	; 0x07
 520:	18 86       	std	Y+8, r1	; 0x08
 522:	8d 81       	ldd	r24, Y+5	; 0x05
			}
			tasks[i]->elapsedTime += 1;
 524:	9e 81       	ldd	r25, Y+6	; 0x06
 526:	af 81       	ldd	r26, Y+7	; 0x07
 528:	b8 85       	ldd	r27, Y+8	; 0x08
 52a:	01 96       	adiw	r24, 0x01	; 1
 52c:	a1 1d       	adc	r26, r1
 52e:	b1 1d       	adc	r27, r1
 530:	8d 83       	std	Y+5, r24	; 0x05
 532:	9e 83       	std	Y+6, r25	; 0x06
 534:	af 83       	std	Y+7, r26	; 0x07
 536:	b8 87       	std	Y+8, r27	; 0x08
 538:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <TimerFlag>
		}
		while(!TimerFlag);
 53c:	88 23       	and	r24, r24
 53e:	e1 f3       	breq	.-8      	; 0x538 <main+0x96>
 540:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <TimerFlag>
		TimerFlag = 0;
 544:	d5 cf       	rjmp	.-86     	; 0x4f0 <main+0x4e>

00000546 <__tablejump2__>:
	}
 546:	ee 0f       	add	r30, r30
 548:	ff 1f       	adc	r31, r31
 54a:	00 24       	eor	r0, r0
 54c:	00 1c       	adc	r0, r0
 54e:	0b be       	out	0x3b, r0	; 59
 550:	07 90       	elpm	r0, Z+
 552:	f6 91       	elpm	r31, Z
 554:	e0 2d       	mov	r30, r0
 556:	09 94       	ijmp

00000558 <_exit>:
 558:	f8 94       	cli

0000055a <__stop_program>:
 55a:	ff cf       	rjmp	.-2      	; 0x55a <__stop_program>
